{"version":3,"sources":["webpack:///./src/pages/index.js","webpack:///./src/components/Adsense/index.js","webpack:///./src/templates/Post/index.js"],"names":["_ref","data","location","posts","lodash_get__WEBPACK_IMPORTED_MODULE_1___default","react__WEBPACK_IMPORTED_MODULE_0___default","a","createElement","components_Layout__WEBPACK_IMPORTED_MODULE_4__","components_Meta__WEBPACK_IMPORTED_MODULE_3__","site","map","_ref2","i","post","templates_Post__WEBPACK_IMPORTED_MODULE_2__","options","isIndex","key","pageQuery","components_Adsense","componentDidMount","this","props","clientId","window","adsbygoogle","push","render","_this$props","slotId","format","react_default","className","style","display","data-ad-client","data-ad-slot","data-ad-format","t","Component","Post_getAd","__webpack_exports__","_data$frontmatter","frontmatter","category","tags","description","title","path","date","image","adsense","html","get_default","isMore","match","fixed","gatsby_browser_entry","boxShadow","to","dateTime","Post_Badges","items","primary","gatsby_image_default","margin","dangerouslySetInnerHTML","__html","getDescription","Post_Button","label","body","replace","split","_ref3","map_default","item"],"mappings":"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","file":"component---src-pages-index-js-76845b79913b4d7afe46.js","sourcesContent":["import { graphql } from 'gatsby'\nimport React from 'react'\nimport get from 'lodash/get'\n\nimport Post from 'templates/Post'\nimport Meta from 'components/Meta'\nimport Layout from 'components/Layout'\n\nconst BlogIndex = ({ data, location }) => {\n  const posts = get(data, 'remark.posts')\n  return (\n    <Layout location={location}>\n      <Meta site={get(data, 'site.meta')} />\n      {posts.map(({ post }, i) => (\n        <Post\n          data={post}\n          options={{\n            isIndex: true,\n          }}\n          key={i}\n        />\n      ))}\n    </Layout>\n  )\n}\n\nexport default BlogIndex\n\nexport const pageQuery = graphql`\n  query IndexQuery {\n    site {\n      meta: siteMetadata {\n        title\n        description\n        url: siteUrl\n        author\n        twitter\n        adsense\n      }\n    }\n    remark: allMarkdownRemark(\n      sort: { fields: [frontmatter___date], order: DESC }\n    ) {\n      posts: edges {\n        post: node {\n          html\n          frontmatter {\n            layout\n            title\n            path\n            category\n            tags\n            description\n            date(formatString: \"YYYY/MM/DD\")\n            image {\n              childImageSharp {\n                fixed(width: 500) {\n                  ...GatsbyImageSharpFixed_withWebp\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`\n","import React from 'react'\n\nclass Adsense extends React.Component {\n  componentDidMount() {\n    const { clientId } = this.props\n    if (clientId) {\n      ;(window.adsbygoogle = window.adsbygoogle || []).push({})\n    }\n  }\n\n  render() {\n    const { clientId, slotId, format } = this.props\n\n    return clientId ? (\n      <div className=\"ad\">\n        <ins\n          className=\"adsbygoogle\"\n          style={{ display: 'block' }}\n          data-ad-client={clientId}\n          data-ad-slot={slotId}\n          data-ad-format={format}\n        />\n      </div>\n    ) : (\n      ''\n    )\n  }\n}\nexport default Adsense\n","import { Link } from 'gatsby'\nimport get from 'lodash/get'\nimport React from 'react'\nimport map from 'lodash/map'\nimport Img from 'gatsby-image'\n\nimport Adsense from 'components/Adsense'\nimport Footer from 'components/Footer'\nimport './style.scss'\n\nconst Post = ({ data, options }) => {\n  const {\n    category,\n    tags,\n    description,\n    title,\n    path,\n    date,\n    image,\n  } = data.frontmatter\n  const { isIndex, adsense } = options\n  const html = get(data, 'html')\n  const isMore = isIndex && !!html.match('<!--more-->')\n  const fixed = get(image, 'childImageSharp.fixed')\n\n  return (\n    <div className=\"article\" key={path}>\n      <div className=\"container\">\n        <div className=\"info\">\n          <Link style={{ boxShadow: 'none' }} to={path}>\n            <h1>{title}</h1>\n            <time dateTime={date}>{date}</time>\n          </Link>\n          {Badges({ items: [category], primary: true })}\n          {Badges({ items: tags })}\n        </div>\n        <div className=\"content\">\n          <p>{description}</p>\n          {fixed ? (\n            <Img fixed={fixed} style={{ display: 'block', margin: '0 auto' }} />\n          ) : (\n            ''\n          )}\n        </div>\n        <div\n          className=\"content\"\n          dangerouslySetInnerHTML={{\n            __html: isMore ? getDescription(html) : html,\n          }}\n        />\n        {isMore ? Button({ path, label: 'MORE', primary: true }) : ''}\n        {getAd(isIndex, adsense)}\n      </div>\n    </div>\n  )\n}\n\nexport default Post\n\nconst getAd = (isIndex, adsense) => {\n  return !isIndex ? <Adsense clientId={adsense} slotId=\"\" format=\"auto\" /> : ''\n}\n\nconst getDescription = body => {\n  body = body.replace(/<blockquote>/g, '<blockquote class=\"blockquote\">')\n  if (body.match('<!--more-->')) {\n    body = body.split('<!--more-->')\n    if (typeof body[0] !== 'undefined') {\n      return body[0]\n    }\n  }\n  return body\n}\n\nconst Button = ({ path, label, primary }) => (\n  <Link className=\"readmore\" to={path}>\n    <span\n      className={`btn btn-outline-primary btn-block ${\n        primary ? 'btn-outline-primary' : 'btn-outline-secondary'\n      }`}\n    >\n      {label}\n    </span>\n  </Link>\n)\n\nconst Badges = ({ items, primary }) =>\n  map(items, (item, i) => {\n    return (\n      <span\n        className={`badge ${primary ? 'badge-primary' : 'badge-secondary'}`}\n        key={i}\n      >\n        {item}\n      </span>\n    )\n  })\n"],"sourceRoot":""}